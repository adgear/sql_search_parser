#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'date'
  require_relative 'parser.rex.rb'

module SQLSearch
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 104)
  def parse(input)
    scan_str(input)
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     8,    52,    53,    26,    80,    83,    54,    49,     4,
     8,    16,    17,    81,    81,    20,    21,    22,    23,    24,
    16,    17,     4,     8,    20,    21,    22,    23,    24,    41,
    68,     4,     8,    16,    17,    27,    27,    20,    21,    22,
    23,    24,    16,    17,    44,    71,    20,    21,    22,    23,
    24,    74,    64,    44,    16,    17,    46,    57,    20,    21,
    22,    23,    24,    16,    17,    44,    71,    20,    21,    22,
    23,    24,   nil,   nil,    44,    16,    17,   nil,   nil,    20,
    21,    22,    23,    24,    16,    17,     8,   nil,    20,    21,
    22,    23,    24,   nil,   nil,    44,    16,    17,   nil,   nil,
    20,    21,    22,    23,    24,    16,    17,    44,   nil,    20,
    21,    22,    23,    24,   nil,   nil,    44,    16,    17,   nil,
   nil,    20,    21,    22,    23,    24,    16,    17,    44,   nil,
    20,    21,    22,    23,    24,   nil,   nil,    44,    16,    17,
   nil,   nil,    20,    21,    22,    23,    24,    16,    17,    44,
   nil,    20,    21,    22,    23,    24,   nil,   nil,    44,    16,
    17,   nil,   nil,    20,    21,    22,    23,    24,    16,    17,
    44,    62,    20,    21,    22,    23,    24,    75,   nil,    63,
    16,    17,    69,   nil,    20,    21,    22,    23,    24,    36,
    37,    38,    39,    40,    36,    37,    38,    39,    32,   nil,
   nil,    31,    33,    34,   nil,   nil,    41,    35,   nil,    36,
    37,    38,    39,    32,   nil,    50,    31,    33,    34,    50,
   nil,    25,    35,    26,    36,    37,    38,    39,    36,    37,
    38,    39,    20,    21,    22,    23,    36,    37,    38,    39,
    36,    37,    38,    39,    36,    37,    38,    39,    20,    21,
    22,    23,    20,    21,    22,    23,    36,    37,    38,    39,
    20,    21,    22,    23,    20,    21,    22,    23,    36,    37,
    38,    39,    36,    37,    38,    39,    36,    37,    38,    39,
    36,    37,    38,    39,    20,    21,    22,    23,    36,    37,
    38,    39 ]

racc_action_check = [
     0,     0,    32,    32,    29,    72,    77,    32,    29,    27,
    27,     0,     0,    72,    77,     0,     0,     0,     0,     0,
    27,    27,    26,    26,    27,    27,    27,    27,    27,    43,
    54,     8,     8,    26,    26,     2,    47,    26,    26,    26,
    26,    26,     8,     8,    17,    67,     8,     8,     8,     8,
     8,    62,    41,    52,    17,    17,    25,    35,    17,    17,
    17,    17,    17,    52,    52,    33,    56,    52,    52,    52,
    52,    52,   nil,   nil,    16,    33,    33,   nil,   nil,    33,
    33,    33,    33,    33,    16,    16,     4,   nil,    16,    16,
    16,    16,    16,   nil,   nil,    39,     4,     4,   nil,   nil,
     4,     4,     4,     4,     4,    39,    39,    69,   nil,    39,
    39,    39,    39,    39,   nil,   nil,    75,    69,    69,   nil,
   nil,    69,    69,    69,    69,    69,    75,    75,    38,   nil,
    75,    75,    75,    75,    75,   nil,   nil,    37,    38,    38,
   nil,   nil,    38,    38,    38,    38,    38,    37,    37,    31,
   nil,    37,    37,    37,    37,    37,   nil,   nil,    36,    31,
    31,   nil,   nil,    31,    31,    31,    31,    31,    36,    36,
    44,    40,    36,    36,    36,    36,    36,    66,   nil,    40,
    44,    44,    55,   nil,    44,    44,    44,    44,    44,    66,
    66,    66,    66,    15,    55,    55,    55,    55,    14,   nil,
   nil,    14,    14,    14,   nil,   nil,    15,    14,   nil,    14,
    14,    14,    14,    30,   nil,    30,    30,    30,    30,    65,
   nil,     1,    30,     1,    30,    30,    30,    30,    65,    65,
    65,    65,    71,    71,    71,    71,    45,    45,    45,    45,
    51,    51,    51,    51,    42,    42,    42,    42,    53,    53,
    53,    53,    68,    68,    68,    68,    78,    78,    78,    78,
    81,    81,    81,    81,    57,    57,    57,    57,    58,    58,
    58,    58,    59,    59,    59,    59,    60,    60,    60,    60,
    61,    61,    61,    61,    34,    34,    34,    34,    82,    82,
    82,    82 ]

racc_action_pointer = [
    -4,   221,    32,   nil,    81,   nil,   nil,   nil,    27,   nil,
   nil,   nil,   nil,   nil,   194,   182,    69,    39,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    56,    18,     5,   nil,     2,
   209,   144,    -6,    60,   265,    52,   153,   132,   123,    90,
   167,    29,   229,     5,   165,   221,   nil,    33,   nil,   nil,
   nil,   225,    48,   229,    25,   179,    56,   245,   253,   257,
   261,   265,    39,   nil,   nil,   213,   174,    35,   233,   102,
   nil,   213,    -1,   nil,   nil,   111,   nil,     0,   241,   nil,
   nil,   241,   273,   nil,   nil ]

racc_action_default = [
   -44,   -44,    -1,    -3,   -44,    -6,    -7,    -8,   -44,   -10,
   -11,   -12,   -13,   -14,   -44,   -35,   -44,   -44,   -34,   -37,
   -38,   -39,   -40,   -41,   -42,   -44,   -44,   -44,    -5,   -44,
   -44,   -44,   -44,   -44,   -44,   -44,   -44,   -44,   -44,   -44,
   -44,   -44,   -32,   -35,   -44,   -33,    85,    -2,    -4,    -9,
   -36,   -15,   -44,   -44,   -44,   -44,   -20,   -44,   -28,   -29,
   -30,   -31,   -44,   -23,   -43,   -44,   -44,   -20,   -44,   -44,
   -19,   -44,   -44,   -26,   -22,   -44,   -18,   -44,   -17,   -21,
   -25,   -44,   -16,   -24,   -27 ]

racc_goto_table = [
    30,    56,    70,     1,    72,    47,    15,    48,    42,    45,
    15,    29,    28,    76,    15,    77,   nil,   nil,   nil,   nil,
    67,   nil,   nil,    51,    73,    55,   nil,   nil,    58,    59,
    60,    61,    15,    15,   nil,    73,    65,   nil,    79,   nil,
   nil,   nil,   nil,   nil,    66,   nil,   nil,   nil,    84,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    78,   nil,   nil,   nil,   nil,   nil,    82 ]

racc_goto_check = [
    12,    13,    14,     1,    16,     2,    15,     3,    12,    12,
    15,     1,     4,    14,    15,    16,   nil,   nil,   nil,   nil,
    13,   nil,   nil,    12,    13,    12,   nil,   nil,    12,    12,
    12,    12,    15,    15,   nil,    13,    12,   nil,    13,   nil,
   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,    13,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    12,   nil,   nil,   nil,   nil,   nil,    12 ]

racc_goto_pointer = [
   nil,     3,   -21,   -20,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    -8,   -33,   -54,     6,   -53,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     5,     6,     7,     9,    10,    11,
    12,    13,    14,    18,   nil,    43,   nil,    19 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 26, :_reduce_none,
  3, 26, :_reduce_2,
  1, 27, :_reduce_none,
  3, 27, :_reduce_4,
  2, 28, :_reduce_5,
  1, 28, :_reduce_none,
  1, 29, :_reduce_none,
  1, 30, :_reduce_none,
  3, 30, :_reduce_9,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 32, :_reduce_15,
  6, 33, :_reduce_none,
  5, 33, :_reduce_none,
  5, 34, :_reduce_18,
  4, 34, :_reduce_19,
  0, 39, :_reduce_none,
  2, 39, :_reduce_none,
  4, 35, :_reduce_22,
  3, 35, :_reduce_23,
  6, 36, :_reduce_24,
  5, 36, :_reduce_25,
  1, 41, :_reduce_26,
  3, 41, :_reduce_27,
  3, 37, :_reduce_28,
  3, 37, :_reduce_29,
  3, 37, :_reduce_30,
  3, 37, :_reduce_31,
  2, 37, :_reduce_32,
  2, 37, :_reduce_33,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  3, 37, :_reduce_none,
  1, 38, :_reduce_none,
  1, 42, :_reduce_38,
  1, 42, :_reduce_39,
  1, 42, :_reduce_40,
  1, 42, :_reduce_41,
  1, 40, :_reduce_42,
  3, 40, :_reduce_43 ]

racc_reduce_n = 44

racc_shift_n = 85

racc_token_table = {
  false => 0,
  :error => 1,
  :OR => 2,
  :AND => 3,
  :NOT => 4,
  :LPAREN => 5,
  :RPAREN => 6,
  :COMPARISON => 7,
  :BETWEEN => 8,
  :LIKE => 9,
  :ESCAPE => 10,
  :IS => 11,
  :NULL => 12,
  :IN => 13,
  :COMMA => 14,
  :ADD => 15,
  :SUBTRACT => 16,
  :MULTIPLY => 17,
  :DIVIDE => 18,
  :STRING => 19,
  :APPROXNUM => 20,
  :INTNUM => 21,
  :TIME => 22,
  :NAME => 23,
  :DOT => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OR",
  "AND",
  "NOT",
  "LPAREN",
  "RPAREN",
  "COMPARISON",
  "BETWEEN",
  "LIKE",
  "ESCAPE",
  "IS",
  "NULL",
  "IN",
  "COMMA",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "STRING",
  "APPROXNUM",
  "INTNUM",
  "TIME",
  "NAME",
  "DOT",
  "$start",
  "search_condition",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "between_predicate",
  "like_predicate",
  "test_for_null",
  "in_predicate",
  "scalar_exp",
  "atom",
  "opt_escape",
  "column_ref",
  "atom_commalist",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_2(val, _values, result)
     result = Conditions::Or.new(:left => val[0], :right => val[2]) 
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_4(val, _values, result)
     result = Conditions::And.new(:left => val[0], :right => val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_5(val, _values, result)
     result = Conditions::Not.new(:value => val[1]) 
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_9(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_15(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[2], :operator => val[1].to_sym) 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_18(val, _values, result)
     result = Conditions::Not.new(:value => Comparisons::Base.new(:left => val[0], :right => val[3], :operator => :LIKE)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_19(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[2], :operator => :LIKE) 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_22(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[3], :operator => :'<>') 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_23(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[2], :operator => :'=') 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_24(val, _values, result)
     result = Conditions::Not.new(:value => Comparisons::In.new(:left => val[0], :right => Atoms::InValues.new(:values => val[4]))) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_25(val, _values, result)
     result = Comparisons::In.new(:left => val[0], :right => Atoms::InValues.new(:values => val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_26(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_27(val, _values, result)
     result = val[0].concat([val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_28(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'+')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_29(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'-')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_30(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'*')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_31(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'/')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_32(val, _values, result)
     result = Atoms::UnaryScalar.new(:value => val[1], :operation => :'+')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_33(val, _values, result)
     result = Atoms::UnaryScalar.new(:value => val[1], :operation => :'-')
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_38(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :string) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_39(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :float) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_40(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :int) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_41(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :datetime) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_42(val, _values, result)
     result = Atoms::Column.new(:name => val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_43(val, _values, result)
     result = Atoms::Column.new(:name => val[2], :space => val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLSearch
