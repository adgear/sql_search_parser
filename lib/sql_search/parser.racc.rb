#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'date'
  require_relative 'parser.rex.rb'

module SQLSearch
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 100)
  def parse(input)
    scan_str(input)
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     8,    76,    27,    26,    65,    27,    48,    77,    14,
    15,     4,     8,    19,    20,    21,    22,    23,    24,    25,
    14,    15,     4,     8,    19,    20,    21,    22,    23,    24,
    25,    14,    15,     4,     8,    19,    20,    21,    22,    23,
    24,    25,    14,    15,    28,    42,    19,    20,    21,    22,
    23,    24,    25,    14,    15,    62,    42,    19,    20,    21,
    22,    23,    24,    25,    14,    15,    56,    42,    19,    20,
    21,    22,    23,    24,    25,    14,    15,    45,     8,    19,
    20,    21,    22,    23,    24,    25,    14,    15,    44,    42,
    19,    20,    21,    22,    23,    24,    25,    14,    15,    28,
    42,    19,    20,    21,    22,    23,    24,    25,    14,    15,
    68,    42,    19,    20,    21,    22,    23,    24,    25,    14,
    15,    68,    42,    19,    20,    21,    22,    23,    24,    25,
    14,    15,   nil,    42,    19,    20,    21,    22,    23,    24,
    25,    14,    15,   nil,    42,    19,    20,    21,    22,    23,
    24,    25,    14,    15,   nil,    42,    19,    20,    21,    22,
    23,    24,    25,    14,    15,   nil,    42,    19,    20,    21,
    22,    23,    24,    25,    14,    15,   nil,    42,    19,    20,
    21,    22,    23,    24,    25,    14,    15,    71,   nil,    19,
    20,    21,    22,    23,    24,    25,    66,    37,    38,    39,
    40,    37,    38,    39,    40,    79,    37,    38,    39,    40,
    33,    77,    49,    32,    34,    35,   nil,    36,   nil,    37,
    38,    39,    40,    33,   nil,   nil,    32,    34,    35,    49,
    36,   nil,    37,    38,    39,    40,    37,    38,    39,    40,
    19,    20,    21,    22,    23,    24,    19,    20,    21,    22,
    23,    24,    19,    20,    21,    22,    23,    24,    19,    20,
    21,    22,    23,    24,    19,    20,    21,    22,    23,    24,
    19,    20,    21,    22,    23,    24,    51,    52,   nil,    53,
    37,    38,    39,    40,    37,    38,    39,    40,    37,    38,
    39,    40,    37,    38,    39,    40,    37,    38,    39,    40,
    37,    38,    39,    40,    37,    38,    39,    40,    37,    38,
    39,    40 ]

racc_action_check = [
     8,     8,    69,    30,     1,    53,     1,    30,    69,     8,
     8,    28,    28,     8,     8,     8,     8,     8,     8,     8,
    28,    28,    27,    27,    28,    28,    28,    28,    28,    28,
    28,    27,    27,     0,     0,    27,    27,    27,    27,    27,
    27,    27,     0,     0,    46,    15,     0,     0,     0,     0,
     0,     0,     0,    15,    15,    44,    71,    15,    15,    15,
    15,    15,    15,    15,    71,    71,    36,    42,    71,    71,
    71,    71,    71,    71,    71,    42,    42,    26,     4,    42,
    42,    42,    42,    42,    42,    42,     4,     4,    17,    66,
     4,     4,     4,     4,     4,     4,     4,    66,    66,     2,
    14,    66,    66,    66,    66,    66,    66,    66,    14,    14,
    64,    51,    14,    14,    14,    14,    14,    14,    14,    51,
    51,    55,    32,    51,    51,    51,    51,    51,    51,    51,
    32,    32,   nil,    34,    32,    32,    32,    32,    32,    32,
    32,    34,    34,   nil,    37,    34,    34,    34,    34,    34,
    34,    34,    37,    37,   nil,    38,    37,    37,    37,    37,
    37,    37,    37,    38,    38,   nil,    39,    38,    38,    38,
    38,    38,    38,    38,    39,    39,   nil,    40,    39,    39,
    39,    39,    39,    39,    39,    40,    40,    63,   nil,    40,
    40,    40,    40,    40,    40,    40,    54,    63,    63,    63,
    63,    78,    78,    78,    78,    73,    54,    54,    54,    54,
    31,    73,    31,    31,    31,    31,   nil,    31,   nil,    31,
    31,    31,    31,    13,   nil,   nil,    13,    13,    13,    61,
    13,   nil,    13,    13,    13,    13,    61,    61,    61,    61,
    52,    52,    52,    52,    52,    52,    56,    56,    56,    56,
    56,    56,    35,    35,    35,    35,    35,    35,    77,    77,
    77,    77,    77,    77,    68,    68,    68,    68,    68,    68,
    65,    65,    65,    65,    65,    65,    33,    33,   nil,    33,
    41,    41,    41,    41,    43,    43,    43,    43,    50,    50,
    50,    50,    57,    57,    57,    57,    58,    58,    58,    58,
    59,    59,    59,    59,    60,    60,    60,    60,    74,    74,
    74,    74 ]

racc_action_pointer = [
    29,     4,    96,   nil,    73,   nil,   nil,   nil,    -4,   nil,
   nil,   nil,   nil,   219,    95,    40,   nil,    64,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    77,    18,     7,   nil,
     1,   206,   117,   268,   128,   235,    61,   139,   150,   161,
   172,   267,    62,   271,    32,   nil,    41,   nil,   nil,   nil,
   275,   106,   223,     0,   193,   111,   229,   279,   283,   287,
   291,   223,   nil,   184,   100,   253,    84,   nil,   247,    -4,
   nil,    51,   nil,   199,   295,   nil,   nil,   241,   188,   nil,
   nil ]

racc_action_default = [
   -43,   -43,    -1,    -3,   -43,    -6,    -7,    -8,   -43,   -10,
   -11,   -12,   -13,   -43,   -43,   -43,   -31,   -32,   -34,   -35,
   -36,   -37,   -38,   -39,   -40,   -41,   -43,   -43,   -43,    -5,
   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,
   -43,   -29,   -43,   -30,   -43,    81,    -2,    -4,    -9,   -33,
   -14,   -43,   -43,   -43,   -43,   -19,   -43,   -25,   -26,   -27,
   -28,   -43,   -42,   -43,   -19,   -43,   -43,   -18,   -43,   -43,
   -23,   -43,   -17,   -43,   -16,   -20,   -22,   -43,   -15,   -21,
   -24 ]

racc_goto_table = [
    31,    69,    67,    47,     1,    46,    41,    43,    29,   nil,
    73,    72,    30,   nil,   nil,   nil,   nil,   nil,    55,   nil,
   nil,   nil,   nil,   nil,    50,   nil,    54,   nil,   nil,    57,
    58,    59,    60,   nil,    61,    64,   nil,   nil,   nil,    70,
   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,    70,   nil,
   nil,    75,   nil,   nil,   nil,   nil,   nil,   nil,    74,   nil,
    80,   nil,   nil,    78 ]

racc_goto_check = [
    11,    14,    13,     3,     1,     2,    11,    11,     4,   nil,
    14,    13,     1,   nil,   nil,   nil,   nil,   nil,    12,   nil,
   nil,   nil,   nil,   nil,    11,   nil,    11,   nil,   nil,    11,
    11,    11,    11,   nil,    11,    12,   nil,   nil,   nil,    12,
   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,    12,   nil,
   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,    11,   nil,
    12,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,     4,   -22,   -25,     4,   nil,   nil,   nil,   nil,   nil,
   nil,    -8,   -17,   -53,   -55,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     5,     6,     7,     9,    10,    11,
    12,    13,    16,   nil,   nil,    17,    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 26, :_reduce_none,
  3, 26, :_reduce_2,
  1, 27, :_reduce_none,
  3, 27, :_reduce_4,
  2, 28, :_reduce_5,
  1, 28, :_reduce_none,
  1, 29, :_reduce_none,
  1, 30, :_reduce_none,
  3, 30, :_reduce_9,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 32, :_reduce_14,
  6, 33, :_reduce_none,
  5, 33, :_reduce_none,
  5, 34, :_reduce_17,
  4, 34, :_reduce_18,
  0, 38, :_reduce_none,
  2, 38, :_reduce_none,
  6, 35, :_reduce_21,
  5, 35, :_reduce_22,
  1, 39, :_reduce_23,
  3, 39, :_reduce_24,
  3, 36, :_reduce_25,
  3, 36, :_reduce_26,
  3, 36, :_reduce_27,
  3, 36, :_reduce_28,
  2, 36, :_reduce_29,
  2, 36, :_reduce_30,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 36, :_reduce_none,
  1, 37, :_reduce_none,
  1, 41, :_reduce_35,
  1, 41, :_reduce_36,
  1, 41, :_reduce_37,
  1, 41, :_reduce_38,
  1, 41, :_reduce_39,
  1, 41, :_reduce_40,
  1, 40, :_reduce_41,
  3, 40, :_reduce_42 ]

racc_reduce_n = 43

racc_shift_n = 81

racc_token_table = {
  false => 0,
  :error => 1,
  :OR => 2,
  :AND => 3,
  :NOT => 4,
  :LPAREN => 5,
  :RPAREN => 6,
  :COMPARISON => 7,
  :BETWEEN => 8,
  :LIKE => 9,
  :ESCAPE => 10,
  :IN => 11,
  :COMMA => 12,
  :ADD => 13,
  :SUBTRACT => 14,
  :MULTIPLY => 15,
  :DIVIDE => 16,
  :BOOL => 17,
  :NULL => 18,
  :STRING => 19,
  :APPROXNUM => 20,
  :INTNUM => 21,
  :TIME => 22,
  :NAME => 23,
  :DOT => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OR",
  "AND",
  "NOT",
  "LPAREN",
  "RPAREN",
  "COMPARISON",
  "BETWEEN",
  "LIKE",
  "ESCAPE",
  "IN",
  "COMMA",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "BOOL",
  "NULL",
  "STRING",
  "APPROXNUM",
  "INTNUM",
  "TIME",
  "NAME",
  "DOT",
  "$start",
  "search_condition",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "between_predicate",
  "like_predicate",
  "in_predicate",
  "scalar_exp",
  "atom",
  "opt_escape",
  "atom_commalist",
  "column_ref",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_2(val, _values, result)
     result = Conditions::Or.new(:left => val[0], :right => val[2]) 
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_4(val, _values, result)
     result = Conditions::And.new(:left => val[0], :right => val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_5(val, _values, result)
     result = Conditions::Not.new(:value => val[1]) 
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_9(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_14(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[2], :operator => val[1].to_sym) 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
     result = Conditions::Not.new(:value => Comparisons::Base.new(:left => val[0], :right => val[3], :operator => :LIKE)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_18(val, _values, result)
     result = Comparisons::Base.new(:left => val[0], :right => val[2], :operator => :LIKE) 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_21(val, _values, result)
     result = Conditions::Not.new(:value => Comparisons::In.new(:left => val[0], :right => Atoms::InValues.new(:values => val[4]))) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_22(val, _values, result)
     result = Comparisons::In.new(:left => val[0], :right => Atoms::InValues.new(:values => val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_23(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_24(val, _values, result)
     result = val[0].concat([val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_25(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'+')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_26(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'-')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_27(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'*')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_28(val, _values, result)
     result = Atoms::Scalar.new(:left => val[0], :right => val[2], :operation => :'/')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_29(val, _values, result)
     result = Atoms::UnaryScalar.new(:value => val[1], :operation => :'+')
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_30(val, _values, result)
     result = Atoms::UnaryScalar.new(:value => val[1], :operation => :'-')
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_35(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :boolean) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_36(val, _values, result)
     result = Atoms::Literal.new(:value => nil, :type => :null) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_37(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :string) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_38(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :float) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_39(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :int) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_40(val, _values, result)
     result = Atoms::Literal.new(:value => val[0], :type => :datetime) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_41(val, _values, result)
     result = Atoms::Column.new(:name => val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_42(val, _values, result)
     result = Atoms::Column.new(:name => val[2], :space => val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLSearch
